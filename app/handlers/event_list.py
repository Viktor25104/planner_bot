from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from datetime import datetime, timedelta
from app.services.event_list_service import (
    list_events, export_one_to_google,
    export_all_to_google, import_from_google_calendar
)
from app.utils.i18n import L

router = Router()


@router.message(F.text.startswith("/list"))
async def list_nearest(message: Message):
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /list.

    –í–∏–≤–æ–¥–∏—Ç—å –ø–æ–¥—ñ—ó –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ —Ç–∞ –∑–∞–≤—Ç—Ä–∞.
    """
    today = datetime.now().date()
    tomorrow = today + timedelta(days=1)
    await list_events(message, today, tomorrow, L({
        "uk": "üìÖ <b>–ù–∞–π–±–ª–∏–∂—á—ñ –ø–æ–¥—ñ—ó:</b>",
        "en": "üìÖ <b>Upcoming events:</b>"
    }))


@router.message(F.text.startswith("/today"))
async def list_today(message: Message):
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /today.

    –í–∏–≤–æ–¥–∏—Ç—å –ø–æ–¥—ñ—ó —Ç—ñ–ª—å–∫–∏ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ.
    """
    today = datetime.now().date()
    await list_events(message, today, today, L({
        "uk": "üìÖ <b>–ü–æ–¥—ñ—ó –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ:</b>",
        "en": "üìÖ <b>Today's events:</b>"
    }))


@router.message(F.text.startswith("/week"))
async def list_week(message: Message):
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /week.

    –í–∏–≤–æ–¥–∏—Ç—å –ø–æ–¥—ñ—ó –Ω–∞ –Ω–∞–π–±–ª–∏–∂—á—ñ 7 –¥–Ω—ñ–≤ (–≤–∫–ª—é—á–Ω–æ –∑ –ø–æ—Ç–æ—á–Ω–∏–º –¥–Ω–µ–º).
    """
    start = datetime.now().date()
    end = start + timedelta(days=6)
    await list_events(message, start, end, L({
        "uk": "üóì <b>–ü–æ–¥—ñ—ó –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å:</b>",
        "en": "üóì <b>Events for the week:</b>"
    }))


@router.message(F.text.startswith("/month"))
async def list_month(message: Message):
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /month.

    –í–∏–≤–æ–¥–∏—Ç—å –ø–æ–¥—ñ—ó –∑–∞ –ø–æ—Ç–æ—á–Ω–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∏–π –º—ñ—Å—è—Ü—å.
    """
    now = datetime.now()
    start = now.replace(day=1).date()
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –¥–µ–Ω—å –º—ñ—Å—è—Ü—è
    end = (now.replace(month=now.month % 12 + 1, day=1) - timedelta(days=1)).date()
    await list_events(message, start, end, L({
        "uk": "üìÇ <b>–ü–æ–¥—ñ—ó —Ü—å–æ–≥–æ –º—ñ—Å—è—Ü—è:</b>",
        "en": "üìÇ <b>Events this month:</b>"
    }))


@router.callback_query(F.data.startswith("export_google:"))
async def export_google(callback: CallbackQuery):
    """
    –û–±—Ä–æ–±–ª—è—î callback –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É –æ–¥–Ω—ñ—î—ó –ø–æ–¥—ñ—ó –≤ Google Calendar.

    –û—Ç—Ä–∏–º—É—î ID –ø–æ–¥—ñ—ó –∑ callback-–¥–∞–Ω–∏—Ö.
    """
    event_id = int(callback.data.split(":")[1])
    await export_one_to_google(callback, event_id)


@router.message(F.text == "/export_all")
async def export_all(message: Message):
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /export_all.

    –ï–∫—Å–ø–æ—Ä—Ç—É—î –≤—Å—ñ –ø–æ–¥—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ Google Calendar.
    """
    await export_all_to_google(message)


@router.message(F.text == "/import_google")
async def import_google(message: Message):
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /import_google.

    –Ü–º–ø–æ—Ä—Ç—É—î –ø–æ–¥—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Google Calendar —É —Å–∏—Å—Ç–µ–º—É.
    """
    await import_from_google_calendar(message)
