from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from app.utils.i18n import L

router = Router()

@router.message()
async def unknown_input(message: Message, state: FSMContext):
    """
    –û–±—Ä–æ–±–ª—è—î –±—É–¥—å-—è–∫–µ –Ω–µ—Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.

    –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É —Å—Ç–∞–Ω—ñ FSM ‚Äî –ø–æ–≤—ñ–¥–æ–º–ª—è—î –ø—Ä–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –≤–≤–µ–¥–µ–Ω–Ω—è.
    –Ø–∫—â–æ —Å—Ç–∞–Ω—É –Ω–µ–º–∞—î ‚Äî –ø—Ä–æ–ø–æ–Ω—É—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –≤—ñ–¥–æ–º—ñ –∫–æ–º–∞–Ω–¥–∏.
    """
    current_state = await state.get_state()
    if current_state:
        await message.answer(L({
            "uk": "‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–Ω—è –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –∑–∞–≤–µ—Ä—à—ñ—Ç—å –¥—ñ—é.",
            "en": "‚ö†Ô∏è Input not recognized. Please try again or cancel the action."
        }))
    else:
        await message.answer(L({
            "uk": "ü§ñ –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–∞. –ù–∞–ø–∏—à—ñ—Ç—å /start –∞–±–æ /add.",
            "en": "ü§ñ Command not recognized. Please type /start or /add."
        }))
